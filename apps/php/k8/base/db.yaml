apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    selector: php-db
  name: php-db
  namespace: k8s-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      selector: php-db
  strategy: {}
  template:
    metadata:
      labels:
        selector: php-db
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: mysql
        - name: MYSQL_ROOT_PASSWORD
          value: example
        image: mysql:8
        name: db
        resources: {}
        volumeMounts:
          - name: php-db-initialization
            mountPath: /docker-entrypoint-initdb.d/init_db.sql
            subPath: init_db.sql
          - name: php-db-pvc
            mountPath: /var/lib/mysql
      restartPolicy: Always
      volumes:
        - name: php-db-initialization
          configMap:
            name: php-db-initialization
            items:
              - key: init_db.sql
                path: init_db.sql
        - name: php-db-pvc
          persistentVolumeClaim:
            claimName: php-db-app
            readOnly: false
status: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: php-db-initialization
  namespace: k8s-demo
data:
  init_db.sql: |
    create SCHEMA IF NOT EXISTS `database` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
    USE `database`;

    CREATE TABLE `traffic` (
      `id` INT NOT NULL AUTO_INCREMENT,
      `hostname` VARCHAR(40) NOT NULL,
      `created_at` DATETIME NOT NULL,
    PRIMARY KEY (`id`));

---
apiVersion: v1
kind: Service
metadata:
  name: php-db
  namespace: k8s-demo
  labels:
    selector: php-db
spec:
  ports:
  - name: "php-db"
    port: 3306
  selector:
    selector: php-db
status:
  loadBalancer: {}
