apiVersion: v1
kind: ConfigMap
metadata:
  name: node-db-initialization
  namespace: k8s-demo
data:
  init-database.sh: |
    #!/bin/bash
        set -e
        psql -v ON_ERROR_STOP=1 --username \"$POSTGRES_USER\" --dbname \"$POSTGRES_DB\" <<-EOSQL
            CREATE TABLE traffic (
                id SERIAL,
                hostname TEXT NOT NULL,
                created_at timestamp
            );
        EOSQL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: k8s-demo
  labels:
    selector: node-db
  name: node-db
spec:
  replicas: 1
  selector:
    matchLabels:
      selector: node-db
  strategy: {}
  template:
    metadata:
      labels:
        selector: node-db
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: example
        - name: POSTGRES_USER
          value: postgres
        image: postgres
        imagePullPolicy: ""
        name: db
        resources: {}
        volumeMounts:
          - name: node-db-initialization
            mountPath: /docker-entrypoint-initdb.d/init-database.sh
            subPath: init-database.sh
          - name: node-db-pvc
            mountPath: /var/lib/postgresql/data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: node-db-initialization
          configMap:
            name: node-db-initialization
            items:
              - key: init-database.sh
                path: init-database.sh
        - name: node-db-pvc
          persistentVolumeClaim:
            claimName: node-db-app
            readOnly: false
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: node-db
  namespace: k8s-demo
  labels:
    selector: node-db
spec:
  ports:
  - name: "node-db"
    port: 5432
  selector:
    selector: node-db
